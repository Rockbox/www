ct-ng-config is the .config file for crosstools-NG[1]. This builds
a working toolchain for the Sony NWZ Linux-based target, so Rockbox
can be compiled as an app.

Although Sony distributes a modified kernel for its players[2], we cannot
possibly build a different toolchain for each of them so it seems even better to
not rely on Sony's kernel and indeed we do not. Some points are worth mentioning:
- Sony uses really old kernels (2.6.23, 2.6.35), most of them really hard
  to compile and unsupported by ct-ng anyway. I picked the lastest stable (and only)
  2.6.x kernel supported by ct-ng (2.6.32.x), this should not make a different since Sony
  did not modify the ABI of the kernel, but simply added drivers.
- Sony uses an absolutely ancient glibc (2.7) which is probably impossible
  to build and also unsupported by ct-ng. Instead I opted to use the latest
  glibc version (2.19) that officially supports the 2.6.23 kernel. As a result,
  and because glibc symols are versioned, executable will run fine as long as
  they don't try to use any function introduced the gap (2.7 - 2.19), which in
  practice should not be a problem. And in the case it happens, Rockbox will not
  even load and the loader will provide a pretty clear error message.
- Sony does provide a toolchain based on the horribly old 4.1.2 compiler. It would
  take a brave soul to try and compile that, and it's likely it would be compilable
  without a lot of patches. Instead, I opted for a more recent (4.9.x) stable version
  of gcc.

Also because it is mostly free, I made the ct-ng build restartable, so that in
case of build failure, there is no need to restart from scratch. A build
can be restarted using "ct-ng build RESTART=step" where the step name can be
found in the build log.

Finally note: the oldest targets of Sony (A810 for example) use even more ancient
linux (2.6.10) and glibc (2.3.3). Supporting those would be crazy, I didn't even
try.

[1]: http://crosstool-ng.org/
[2]: http://oss.sony.net/Products/Linux/Audio/category01.html
